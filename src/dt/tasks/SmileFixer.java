package dt.tasks;

import java.util.Stack;

/*
Есть сообщения из соцсети. Хочется сокращать из них смайлики как можно быстрее (в алгоритмическом смысле)

Например:

"Я работаю в гугле :-)))()"
"Круто :-)) А я недавно завалил туда собес :-((()("

---->

"Я работаю в гугле :-)()"
"Круто :-) А я недавно завалил туда собес :-()("



Смайлик это ":-)+", ":-(+"
:-))))))))))))) -> :-)
*/

/**
 * Основная идея:
 * Идем по строке:
 * Если длинна стека меньше 3 - всегда добавляем очередной символ в строку.
 * Если стек 3 - делаем доп проеверку, что очередной символ не равен верхушке стека (до этого в тсек кладем символы смайлика)
 * 1) Если встретили ':'(начало смайлкиа) - добавляем его в стэк, помечаем, что последний элеемнт - это ':', добавляем в результат и к следующей итерации
 * 2) Если встретили '-' и при этом в стеке есть один элеемнт (и он последний) - все, что и в первом шаге, но если условие не сработало -
 * - очищаем стек
 * 3) Если встретили ')' или '(' и при этом в стеке есть 2 элеемнта (и последний=='-') - все, что и в первом шаге и во втором шаге,
 * но если условие не сработало - то стек сам почистется, так как верхушка не будет равна текущему
 * Возвращаем итоговую строку.
 * <p>
 * P.S. Грязно, можно условия вынести (они одинковые), в первом приближении так.
 */
public class SmileFixer {

    public String smileFixer(String s) {
        StringBuilder builder = new StringBuilder();

        Stack<Character> stack = new Stack<>();
        char last = ' ';
        for (char sub : s.toCharArray()) {
            if (stack.isEmpty() && sub == ':') {
                stack.push(sub);
                last = sub;
                builder.append(sub);
                continue;
            }
            if (stack.size() == 1 && sub == '-' && last == ':') {
                stack.push(sub);
                last = sub;
                builder.append(sub);
                continue;
            } else if (stack.size() == 1) {
                stack.clear();
                last = ' ';
            }
            if (stack.size() == 2 && (sub == ')' || sub == '(') && last == '-') {
                stack.push(sub);
                builder.append(sub);
                continue;
            }
            if (stack.size() == 3) {
                if (sub == stack.peek()) {
                    continue;
                } else {
                    stack.clear();
                    builder.append(sub);
                    last = ' ';
                }
            } else {
                builder.append(sub);
            }
        }
        System.out.println(builder);
        return builder.toString();
    }

}

