package dt.tasks.bank;

/**
 * Задача: Банкомат.
 * <p>
 * Требуется реализовать класс ATM, который инициализируется набором банкнот (купюр) и умеет выдавать заданную сумму.
 * При выдаче банкноты списываются с баланса банкомата.
 * Если сумма не может быть выдана, нужно ответить отказом (например, выбросить исключение или вернуть ошибку).
 * <p>
 * Допустимые номиналы банкнот: 50₽, 100₽, 500₽, 1000₽, 5000₽.
 * <p>
 * API взаимодействия с аппаратурой банкомата реализуется в интерфейсе SDK.
 * <p>
 * Особенности работы SDK и банкомата:
 * - Деньги расположены в кассетах, каждая кассета содержит банкноты одного номинала.
 * - Количество банкнот в каждой кассете известно инкассатору при установке.
 * - Метод подсчёта оставшихся банкнот в кассетах занимает около 10 секунд, поэтому его стоит вызывать как можно реже.
 * - Интерфейс SDK может быть расширен по договорённости.
 */

// Класс банкомата
public class ATM {

    private final SDK sdk;

    /**
     * Инициализация банкомата с API для работы с оборудованием.
     *
     * @param sdk реализация интерфейса SDK для взаимодействия с оборудованием банкомата
     */
    public ATM(SDK sdk) {
        this.sdk = sdk;
    }

    /**
     * Попытаться выдать заданную сумму с помощью купюр, имеющихся в банкомате.
     *
     * @param amount сумма в рублях, которую нужно выдать
     * @throws IllegalArgumentException если сумму выдать невозможно из-за отсутствия подходящих банкнот или другого ограничения
     */
    public void dispense(int amount) {
        if (amount % 50 != 0) throw new IllegalArgumentException();
        // TODO: реализовать логику распределения купюр по номиналам с использованием SDK
        // и учет списания банкнот из кассет.
    }
}

